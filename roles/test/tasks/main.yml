---
- name: Create a network
  docker_network:
    name: network1

- name: elasticsearch container
  docker_container:
    name: 'elasticsearch'
    image: 'docker.elastic.co/elasticsearch/elasticsearch:6.2.2'
    state: started
    ports:
      - 9200:9200
      - 9300:9300
    networks:
     - name: network1
    hostname: elasticsearch
    memory: 3g

- name: kibana container
  docker_container:
    name: 'kibana'
    image: 'docker.elastic.co/kibana/kibana:6.2.2'
    state: started
    ports:
      - 5601:5601
    volumes:
     - "{{ role_path }}/files/logstash.yml:/usr/share/logstash/config/logstash.yml"
    networks:
     - name: network1
    hostname: kibana

# need to be created after kibana to know its hostname
- name: create nginx reverse proxy container
  docker_container:
    name: 'nginx-first'
    image: 'nginx:alpine'
    state: started
    ports:
      - 8091:80
    volumes:
     - "{{ role_path }}/files/default.conf:/etc/nginx/conf.d/default.conf"
     - "{{ role_path }}/files/.htpasswd:/etc/nginx/.htpasswd"
    networks:
     - name: network1
    hostname: nginx-first

- name: logstash container
  docker_container:
    name: 'logstash'
    image: 'docker.elastic.co/logstash/logstash:6.2.2'
    state: started
    volumes:
     - "{{ role_path }}/files/logstash.yml:/usr/share/logstash/config/logstash.yml"
     - "{{ role_path }}/files/logstash-beats.conf:/usr/share/logstash/pipeline/logstash.conf"
    networks:
     - name: network1
    hostname: logstash


- name: filebeat container
  docker_container:
    name: 'filebeat'
    image: 'docker.elastic.co/beats/filebeat:6.2.2'
    state: started
    user: root
    volumes:
     - "{{ role_path }}/files/filebeat.yml:/usr/share/filebeat/filebeat.yml"
     - "/var/lib/docker/containers/:/hostfs/var/lib/docker/containers/"
    networks:
     - name: network1
    hostname: filebeat
